package thread.test;
public class ThreadService {

    private Thread executeThread;
    
    private boolean finished = false;

    /**
     * 执行一个线程
     */
    public void execute( Runnable task) {
        executeThread = new Thread(new Runnable() {
            @Override
            public void run() {
                Thread runner = new Thread(task);
                runner.setDaemon(true);
                runner.start();
                try {
                	runner.join();
                	finished = true;
				} catch (InterruptedException e) {
					System.out.println("收到打断信号! ");
				}
            }
        });
        executeThread.start();
    }

    /**
     * 强制停止执行线程，最多等待mills时间，如果超过这个时间则会强制停止
     */
    public void shutDown(long mills) {
    	long curr =   System.currentTimeMillis();
    	while (!finished) {
				 if(System.currentTimeMillis() - curr  >= mills) {
					 executeThread.interrupt();
					 break;
				 }

			 try {
				 executeThread.sleep(10);
			} catch (Exception e) {
				System.out.println("executeThread.sleep(10);");
				break;
			}
		}
    	finished = false;
    	System.out.println("执行完成!............");
    	
    	
    }
}
